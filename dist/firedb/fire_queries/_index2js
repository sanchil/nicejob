/**
 * code for firestore queries
 * 
 * 
 * 
 */
 const { nanoid } = require('nanoid');

var db = require('../index.js');

const write = async (params, data) => {
  const userCollections = db.collection(params.collection);
  let newid = "";
  if(params.id){
    return userCollections.doc(params.id)
    .update(data)
    .then(() => {
      console.log("Update doc called");
    })
    .catch((error) => {
      // The document probably doesn't exist.
      console.error("Error updating document: ", error);
    });

  }else{

    if(data.email){
      newid = data.email.replace(/\s+/g,'')+'_'+nanoid(4);
    }else{
      newid = nanoid(4);
    }
    
    console.log("Datra: ",data.email);
    return userCollections.doc(newid)
    .set(data)
    .then(() => {
      console.log("Add doc called");
    })
    .catch((error) => {
      console.error("Error adding document: ", error);
    });

  }
  

  


}

const updateDoc = async (collection, id, data) => {
  const userCollections = db.collection(collection);
  return userCollections.doc(id)
    .update(data)
    .then(() => {
      console.log("Update doc called");
    })
    .catch((error) => {
      // The document probably doesn't exist.
      console.error("Error updating document: ", error);
    });
}

const readOne = async (collection, id) => {
  const userCollections = db.collection(collection);
  return userCollections.doc(id).get();

}


const readMany = async (collection, lim) => {
  const userCollections = db.collection(collection);
  return userCollections
    .limit(parseInt(Number(lim)))
    .get();

}




module.exports = {
  write,
  updateDoc,
  readOne,
  readMany
}


//####################################################################

//const docRef = db.collection('users').doc('alovelace');


/* await docRef.set({
  first: 'Ada',
  last: 'Lovelace',
  born: 1815
});

const snapshot = await db.collection('users').get();
snapshot.forEach((doc) => {
  console.log(doc.id, '=>', doc.data());
});
 */

//####################################################################